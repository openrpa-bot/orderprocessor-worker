plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ Project dependency — Gradle will build it automatically
    implementation project(':temporalbase')

    implementation 'io.temporal:temporal-sdk:1.31.0'

    // Logging
    implementation 'org.apache.logging.log4j:log4j-api:2.25.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.25.2'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.25.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.20.0'

    // gRPC shaded netty for Temporal
    implementation 'io.grpc:grpc-netty-shaded:1.76.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.42'
    annotationProcessor 'org.projectlombok:lombok:1.18.42'
}

application {
    mainClass = 'com.nigam.temporal.TemporalRunner'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('shadowJar') {
    archiveBaseName.set('order-management-system')
    archiveVersion.set('1.0')
    manifest {
        attributes(
                'Main-Class': 'com.nigam.temporal.TemporalRunner'
        )
    }

    // ✅ Merge service files for gRPC and other META-INF/services
    mergeServiceFiles()

    // Exclude duplicate files gracefully
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// ✅ Proper jar task — no need to manually expand temporalbase JAR
// Gradle will include project dependencies automatically
jar {
    manifest {
        attributes 'Main-Class': 'com.nigam.temporal.TemporalRunner'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Optional: Ensure multi-module build works automatically
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
